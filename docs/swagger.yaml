definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Person:
    properties:
      address:
        type: string
      age:
        type: integer
      name:
        type: string
    type: object
  models.UserBasic:
    properties:
      clientIp:
        type: string
      clientPort:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      deviceInfo:
        type: string
      email:
        type: string
      heartBeatTime:
        type: string
      id:
        type: integer
      identity:
        type: string
      isLogiut:
        type: boolean
      loginOutTime:
        type: string
      loginTime:
        type: string
      name:
        type: string
      passWord:
        type: string
      phone:
        type: string
      salt:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /index:
    get:
      consumes:
      - application/json
      description: 返回首页
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 首页样例
      tags:
      - 首页
  /postPerson:
    post:
      consumes:
      - application/json
      description: 测试post
      parameters:
      - description: 数据
        in: body
        name: person
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
      summary: 测试post
      tags:
      - 测试模块
  /user/createUser:
    get:
      consumes:
      - application/json
      description: 新增用户
      parameters:
      - description: 用户名
        in: query
        name: name
        type: string
      - description: 密码
        in: query
        name: password
        type: string
      - description: 确认密码
        in: query
        name: repassword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      summary: 新增用户
      tags:
      - 用户模块
  /user/deleteUser:
    get:
      description: 删除用户
      parameters:
      - description: 用户id
        in: query
        name: id
        type: string
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      summary: 删除用户
      tags:
      - 用户模块
  /user/getUserByNameAndPwd:
    get:
      consumes:
      - application/json
      description: 根据用户名和密码获取用户
      parameters:
      - description: 用户名
        in: query
        name: name
        type: string
      - description: 密码
        in: query
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: code","message","data"}
          schema:
            type: string
      summary: 根据用户名和密码获取用户
      tags:
      - 用户模块
  /user/getUserList:
    get:
      consumes:
      - application/json
      description: 获取用户集合
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserBasic'
            type: array
      summary: 获取用户
      tags:
      - 用户模块
  /user/updateUser:
    post:
      description: 更新用户
      parameters:
      - description: id
        in: formData
        name: id
        type: string
      - description: 用户名
        in: formData
        name: name
        type: string
      - description: 密码
        in: formData
        name: password
        type: string
      - description: phone
        in: formData
        name: phone
        type: string
      - description: email
        in: formData
        name: email
        type: string
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      summary: 更新用户
      tags:
      - 用户模块
swagger: "2.0"
